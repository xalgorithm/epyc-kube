# WordPress Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: ethosenv
  labels:
    app: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      securityContext:
        runAsNonRoot: false  # WordPress needs to write files
        fsGroup: 33  # www-data group
      initContainers:
      - name: copy-wordpress-files
        image: wordpress:latest
        command: ['sh', '-c']
        args:
        - |
          # Copy WordPress files if the directory is empty
          if [ ! -f /var/www/html/wp-config.php ]; then
            echo "Copying WordPress files..."
            cp -r /usr/src/wordpress/* /var/www/html/
            chown -R www-data:www-data /var/www/html
          else
            echo "WordPress files already exist, skipping copy"
          fi
        volumeMounts:
        - name: wordpress-storage
          mountPath: /var/www/html
        securityContext:
          runAsUser: 0  # Need root to copy files and change ownership
      containers:
      - name: wordpress
        image: wordpress:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_DB_HOST
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_DB_USER
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_DB_PASSWORD
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_DB_NAME
        - name: WORDPRESS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_AUTH_KEY
        - name: WORDPRESS_SECURE_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_SECURE_AUTH_KEY
        - name: WORDPRESS_LOGGED_IN_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_LOGGED_IN_KEY
        - name: WORDPRESS_NONCE_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_NONCE_KEY
        - name: WORDPRESS_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_AUTH_SALT
        - name: WORDPRESS_SECURE_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_SECURE_AUTH_SALT
        - name: WORDPRESS_LOGGED_IN_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_LOGGED_IN_SALT
        - name: WORDPRESS_NONCE_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-secrets
              key: WORDPRESS_NONCE_SALT

        volumeMounts:
        - name: wordpress-storage
          mountPath: /var/www/html
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsUser: 33  # www-data user
          runAsGroup: 33  # www-data group
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: wordpress-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: ethosenv
  labels:
    app: wordpress
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: wordpress